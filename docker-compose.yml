x-logging-defaults: &logging-defaults
  driver: json-file
  options:
    max-size: 500k
    max-file: 10

services:
  postgres:
    container_name: loan_advisory.postgres
    image: "postgres:16-alpine"
    hostname: loan_advisory.postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    networks:
      - loan_advisory.postgres.network
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - loan_advisory.postgres.data:/var/lib/postgresql/data:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging:
      <<: *logging-defaults

  webapi:
    container_name: loan_advisory.webapi
    command: sh -c "alembic upgrade head && python -m main.app"
    hostname: loan_advisory.webapi
    ports:
      - "8000:8000"
    build: .
    restart: unless-stopped
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - loan_advisory.postgres.network
      - loan_advisory.redis.network
    volumes:
      - ./loan_advisory_service:/loan_advisory_service

  redis:
    container_name: loan_advisory.redis
    hostname: loan_advisory.redis
    image: "redis:7.4-alpine"
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD} ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    volumes:
      - loan_advisory.redis.data:/data
    networks:
      - loan_advisory.redis.network

volumes:
  loan_advisory.postgres.data: {}
  loan_advisory.redis.data: {}



networks:
  loan_advisory.postgres.network: {}
  loan_advisory.redis.network: {}
